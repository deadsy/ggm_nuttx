--- ./nuttx/configs/stm32f429i-disco/nsh/defconfig	2019-05-22 07:09:05.445356751 -0700
+++ ./nuttx/configs/stm32f429i-disco/nsh/defconfig	2019-05-22 07:09:25.409252344 -0700
@@ -47,8 +47,8 @@
 CONFIG_START_MONTH=12
 CONFIG_START_YEAR=2011
 CONFIG_STM32_DISABLE_IDLE_SLEEP_DURING_DEBUG=y
-CONFIG_STM32_FSMC=y
-CONFIG_STM32_FSMC_SRAM=y
+CONFIG_STM32_FMC=y
+CONFIG_STM32_EXTERNAL_RAM=y
 CONFIG_STM32_JTAG_SW_ENABLE=y
 CONFIG_STM32_PWR=y
 CONFIG_STM32_USART1=y
--- ./nuttx/configs/stm32f429i-disco/src/Makefile	2019-05-22 07:24:00.673084275 -0700
+++ ./nuttx/configs/stm32f429i-disco/src/Makefile	2019-05-22 07:24:14.217028691 -0700
@@ -56,7 +56,7 @@
 CSRCS += stm32_idle.c
 endif
 
-ifeq ($(CONFIG_STM32_FSMC),y)
+ifeq ($(CONFIG_STM32_FMC),y)
 CSRCS += stm32_extmem.c
 endif
 
--- ./nuttx/configs/stm32f429i-disco/include/board.h	2019-05-22 17:36:22.387920378 -0700
+++ ./nuttx/configs/stm32f429i-disco/include/board.h	2019-05-22 17:37:46.767852253 -0700
@@ -248,11 +248,11 @@
 #define GPIO_SPI4_MOSI GPIO_SPI4_MOSI_1
 #define GPIO_SPI4_SCK  GPIO_SPI4_SCK_1
 
-/* FSMC - SDRAM */
+/* FMC - SDRAM */
 
-#define GPIO_FSMC_SDCKE1 GPIO_FSMC_SDCKE1_1
-#define GPIO_FSMC_SDNE1  GPIO_FSMC_SDNE1_1
-#define GPIO_FSMC_SDNWE  GPIO_FSMC_SDNWE_1
+#define GPIO_FMC_SDCKE1 GPIO_FMC_SDCKE1_1
+#define GPIO_FMC_SDNE1  GPIO_FMC_SDNE1_1
+#define GPIO_FMC_SDNWE  GPIO_FMC_SDNWE_1
 
 /* Timer Inputs/Outputs (see the README.txt file for options) */
 
--- ./nuttx/configs/stm32f4discovery/src/stm32_extmem.c	2019-05-22 19:55:53.781826472 -0700
+++ ./nuttx/configs/stm32f4discovery/src/stm32_extmem.c	2019-05-22 19:56:49.271319353 -0700
@@ -145,41 +145,3 @@
 {
   stm32_extmemgpios(g_dataconfig, ndata);
 }
-
-/************************************************************************************
- * Name: stm32_enablefsmc
- *
- * Description:
- *  enable clocking to the FSMC module
- *
- ************************************************************************************/
-
-void stm32_enablefsmc(void)
-{
-  uint32_t regval;
-
-  /* Enable AHB clocking to the FSMC */
-
-  regval  = getreg32( STM32_RCC_AHB3ENR);
-  regval |= RCC_AHB3ENR_FSMCEN;
-  putreg32(regval, STM32_RCC_AHB3ENR);
-}
-
-/************************************************************************************
- * Name: stm32_disablefsmc
- *
- * Description:
- *  enable clocking to the FSMC module
- *
- ************************************************************************************/
-
-void stm32_disablefsmc(void)
-{
-  uint32_t regval;
-
-  /* Disable AHB clocking to the FSMC */
-
-  regval  = getreg32(STM32_RCC_AHB3ENR);
-  regval &= ~RCC_AHB3ENR_FSMCEN;
-  putreg32(regval, STM32_RCC_AHB3ENR);
-}
--- ./nuttx/configs/stm32f4discovery/src/stm32f4discovery.h	2019-05-22 20:02:14.158767498 -0700
+++ ./nuttx/configs/stm32f4discovery/src/stm32f4discovery.h	2019-05-22 20:02:53.248168458 -0700
@@ -595,30 +595,6 @@
 #endif
 
 /****************************************************************************
- * Name: stm32_enablefsmc
- *
- * Description:
- *  enable clocking to the FSMC module
- *
- ****************************************************************************/
-
-#ifdef CONFIG_STM32_FSMC
-void stm32_enablefsmc(void);
-#endif
-
-/****************************************************************************
- * Name: stm32_disablefsmc
- *
- * Description:
- *  enable clocking to the FSMC module
- *
- ****************************************************************************/
-
-#ifdef CONFIG_STM32_FSMC
-void stm32_disablefsmc(void);
-#endif
-
-/****************************************************************************
  * Name: stm32_led_pminitialize
  *
  * Description:
--- ./nuttx/configs/stm32f4discovery/src/stm32_ssd1289.c	2019-05-22 20:03:58.236144358 -0700
+++ ./nuttx/configs/stm32f4discovery/src/stm32_ssd1289.c	2019-05-22 20:05:47.186123334 -0700
@@ -280,7 +280,7 @@
 
   /* Enable AHB clocking to the FSMC */
 
-  stm32_enablefsmc();
+  stm32_fsmc_enable();
 
   /* Color LCD configuration (LCD configured as follow):
    *
--- ./nuttx/configs/stm32f429i-disco/src/stm32_boot.c	2019-05-22 20:18:39.158463833 -0700
+++ ./nuttx/configs/stm32f429i-disco/src/stm32_boot.c	2019-05-22 20:26:37.253764633 -0700
@@ -96,8 +96,8 @@
   board_autoled_initialize();
 #endif
 
-#ifdef CONFIG_STM32_FSMC
-  stm32_enablefsmc();
+#ifdef CONFIG_STM32_FMC
+  stm32_sdram_initialize();
 #endif
 
 #ifdef HAVE_CCM_HEAP
--- ./nuttx/configs/stm32f429i-disco/src/stm32f429i-disco.h	2019-05-22 20:22:04.641330684 -0700
+++ ./nuttx/configs/stm32f429i-disco/src/stm32f429i-disco.h	2019-05-22 20:25:59.104043358 -0700
@@ -274,30 +274,16 @@
 int stm32_tsc_setup(int minor);
 #endif
 
-/****************************************************************************
-
- * Name: stm32_enablefsmc
- *
- * Description:
- *  enable clocking to the FSMC module
- *
- ****************************************************************************/
-
-#ifdef CONFIG_STM32_FSMC
-void stm32_enablefsmc(void);
-#endif
-
-/****************************************************************************
-
- * Name: stm32_disablefsmc
+/************************************************************************************
+ * Name: stm32_sdram_initialize
  *
  * Description:
- *  enable clocking to the FSMC module
+ *   Called from stm32_bringup to initialize external SDRAM access.
  *
- ****************************************************************************/
+ ************************************************************************************/
 
-#ifdef CONFIG_STM32_FSMC
-void stm32_disablefsmc(void);
+#ifdef CONFIG_STM32_FMC
+void stm32_sdram_initialize(void);
 #endif
 
 /****************************************************************************
--- ./nuttx/configs/stm32f429i-disco/lvgl/defconfig	2019-05-22 21:21:16.464411458 -0700
+++ ./nuttx/configs/stm32f429i-disco/lvgl/defconfig	2019-05-22 21:21:33.456013282 -0700
@@ -65,8 +65,8 @@
 CONFIG_STM32F429I_DISCO_ILI9341=y
 CONFIG_STM32_CCMEXCLUDE=y
 CONFIG_STM32_DISABLE_IDLE_SLEEP_DURING_DEBUG=y
-CONFIG_STM32_FSMC=y
-CONFIG_STM32_FSMC_SRAM=y
+CONFIG_STM32_FMC=y
+CONFIG_STM32_EXTERNAL_RAM=y
 CONFIG_STM32_I2C3=y
 CONFIG_STM32_JTAG_SW_ENABLE=y
 CONFIG_STM32_LTDC=y
--- ./nuttx/configs/stm32f429i-disco/src/stm32_extmem.c	2019-05-22 17:34:32.586530006 -0700
+++ ./nuttx/configs/stm32f429i-disco/src/stm32_extmem.c	2019-05-22 20:47:50.503696779 -0700
@@ -43,68 +43,66 @@
 #include <assert.h>
 #include <debug.h>
 
+#include <arch/board/board.h>
+
 #include "chip.h"
 #include "up_arch.h"
 
-#include "stm32_fsmc.h"
-#include "stm32_gpio.h"
 #include "stm32.h"
 #include "stm32f429i-disco.h"
 
-#include <arch/board/board.h>
-
 /************************************************************************************
  * Pre-processor Definitions
  ************************************************************************************/
 
-#ifndef CONFIG_STM32_FSMC
-#  warning "FSMC is not enabled"
+#ifndef CONFIG_STM32_FMC
+#warning "FMC is not enabled"
 #endif
 
 #if STM32_NGPIO_PORTS < 6
-#  error "Required GPIO ports not enabled"
+#error "Required GPIO ports not enabled"
 #endif
 
-#define STM32_FSMC_NADDRCONFIGS 22
-#define STM32_FSMC_NDATACONFIGS 16
+#define STM32_SDRAM_CLKEN     FMC_SDCMR_CMD_CLK_ENABLE | FMC_SDCMR_BANK_2
 
-#define STM32_SDRAM_CLKEN     FSMC_SDRAM_MODE_CMD_CLK_ENABLE | FSMC_SDRAM_CMD_BANK_2
-#define STM32_SDRAM_PALL      FSMC_SDRAM_MODE_CMD_PALL | FSMC_SDRAM_CMD_BANK_2
-#define STM32_SDRAM_REFRESH   FSMC_SDRAM_MODE_CMD_AUTO_REFRESH | FSMC_SDRAM_CMD_BANK_2 |\
-                                (3 << FSMC_SDRAM_AUTO_REFRESH_SHIFT)
-#define STM32_SDRAM_MODEREG   FSMC_SDRAM_MODE_CMD_LOAD_MODE | FSMC_SDRAM_CMD_BANK_2 |\
-                                FSMC_SDRAM_MODEREG_BURST_LENGTH_2 | \
-                                FSMC_SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL |\
-                                FSMC_SDRAM_MODEREG_CAS_LATENCY_3 |\
-                                FSMC_SDRAM_MODEREG_WRITEBURST_MODE_SINGLE
+#define STM32_SDRAM_PALL      FMC_SDCMR_CMD_PALL | FMC_SDCMR_BANK_2
 
+#define STM32_SDRAM_REFRESH   FMC_SDCMR_CMD_AUTO_REFRESH | FMC_SDCMR_BANK_2 |\
+                                FMC_SDCMR_NRFS(4)
+
+#define STM32_SDRAM_MODEREG   FMC_SDCMR_CMD_LOAD_MODE | FMC_SDCMR_BANK_2 |\
+                                FMC_SDCMR_MDR_BURST_LENGTH_2 | \
+                                FMC_SDCMR_MDR_BURST_TYPE_SEQUENTIAL |\
+                                FMC_SDCMR_MDR_CAS_LATENCY_3 |\
+                                FMC_SDCMR_MDR_WBL_SINGLE
 
 /************************************************************************************
  * Public Data
  ************************************************************************************/
 
-/* GPIO configurations common to most external memories */
+/************************************************************************************
+ * Private Data
+ ************************************************************************************/
 
-static const uint32_t g_addressconfig[STM32_FSMC_NADDRCONFIGS] =
-{
-  GPIO_FSMC_A0,  GPIO_FSMC_A1 , GPIO_FSMC_A2,  GPIO_FSMC_A3,  GPIO_FSMC_A4 , GPIO_FSMC_A5,
-  GPIO_FSMC_A6,  GPIO_FSMC_A7,  GPIO_FSMC_A8,  GPIO_FSMC_A9,  GPIO_FSMC_A10, GPIO_FSMC_A11,
+/* GPIO configurations common to most external memories */
 
-  GPIO_FSMC_SDCKE1, GPIO_FSMC_SDNE1, GPIO_FSMC_SDNWE, GPIO_FSMC_NBL0,
-  GPIO_FSMC_SDNRAS, GPIO_FSMC_NBL1,  GPIO_FSMC_BA0,   GPIO_FSMC_BA1,
-  GPIO_FSMC_SDCLK,  GPIO_FSMC_SDNCAS
+static const uint32_t g_sdram_config[] = {
+  /* 16 data lines */
+  GPIO_FMC_D0, GPIO_FMC_D1, GPIO_FMC_D2, GPIO_FMC_D3,
+  GPIO_FMC_D4, GPIO_FMC_D5, GPIO_FMC_D6, GPIO_FMC_D7,
+  GPIO_FMC_D8, GPIO_FMC_D9, GPIO_FMC_D10, GPIO_FMC_D11,
+  GPIO_FMC_D12, GPIO_FMC_D13, GPIO_FMC_D14, GPIO_FMC_D15,
+  /* 12 address lines */
+  GPIO_FMC_A0, GPIO_FMC_A1, GPIO_FMC_A2, GPIO_FMC_A3,
+  GPIO_FMC_A4, GPIO_FMC_A5, GPIO_FMC_A6, GPIO_FMC_A7,
+  GPIO_FMC_A8, GPIO_FMC_A9, GPIO_FMC_A10, GPIO_FMC_A11,
+  /* control lines */
+  GPIO_FMC_SDCKE1, GPIO_FMC_SDNE1, GPIO_FMC_SDNWE, GPIO_FMC_NBL0,
+  GPIO_FMC_SDNRAS, GPIO_FMC_NBL1, GPIO_FMC_BA0, GPIO_FMC_BA1,
+  GPIO_FMC_SDCLK, GPIO_FMC_SDNCAS,
 };
 
-static const uint32_t g_dataconfig[STM32_FSMC_NDATACONFIGS] =
-{
-  GPIO_FSMC_D0,  GPIO_FSMC_D1 , GPIO_FSMC_D2,  GPIO_FSMC_D3,  GPIO_FSMC_D4 , GPIO_FSMC_D5,
-  GPIO_FSMC_D6,  GPIO_FSMC_D7,  GPIO_FSMC_D8,  GPIO_FSMC_D9,  GPIO_FSMC_D10, GPIO_FSMC_D11,
-  GPIO_FSMC_D12, GPIO_FSMC_D13, GPIO_FSMC_D14, GPIO_FSMC_D15
-};
-
-/************************************************************************************
- * Private Data
- ************************************************************************************/
+#define NUM_SDRAM_GPIOS (sizeof(g_sdram_config) / sizeof(uint32_t))
 
 /************************************************************************************
  * Private Functions
@@ -115,75 +113,27 @@
  ************************************************************************************/
 
 /************************************************************************************
- * Name: stm32_extmemgpios
+ * Name: stm32_sdram_initialize
  *
  * Description:
- *   Initialize GPIOs for external memory usage
+ *   Called from stm32_bringup to initialize external SDRAM access.
  *
  ************************************************************************************/
 
-static void stm32_extmemgpios(const uint32_t *gpios, int ngpios)
+void stm32_sdram_initialize(void)
 {
+  uint32_t val;
   int i;
+  volatile int count;
 
-  /* Configure GPIOs */
-
-  for (i = 0; i < ngpios; i++)
+  /* Enable GPIOs as FMC / memory pins */
+  for (i = 0; i < NUM_SDRAM_GPIOS; i++)
     {
-      stm32_configgpio(gpios[i]);
+      stm32_configgpio(g_sdram_config[i]);
     }
-}
 
-/************************************************************************************
- * Name: stm32_sdramcommand
- *
- * Description:
- *   Initialize data line GPIOs for external memory access
- *
- ************************************************************************************/
-
-static void stm32_sdramcommand(uint32_t command)
-{
-  uint32_t  regval;
-  volatile  uint32_t timeout = 0xFFFF;
-
-  regval = getreg32( STM32_FSMC_SDSR ) & 0x00000020;
-  while ((regval != 0) && timeout-- > 0)
-    {
-      regval = getreg32( STM32_FSMC_SDSR ) & 0x00000020;
-    }
-  putreg32(command, STM32_FSMC_SDCMR);
-  timeout = 0xFFFF;
-  regval = getreg32( STM32_FSMC_SDSR ) & 0x00000020;
-  while ((regval != 0) && timeout-- > 0)
-    {
-      regval = getreg32( STM32_FSMC_SDSR ) & 0x00000020;
-    }
-}
-
-/************************************************************************************
- * Name: stm32_enablefsmc
- *
- * Description:
- *  enable clocking to the FSMC module
- *
- ************************************************************************************/
-
-void stm32_enablefsmc(void)
-{
-  uint32_t regval;
-  volatile int count;
-
-  /* Enable GPIOs as FSMC / memory pins */
-
-  stm32_extmemgpios(g_addressconfig, STM32_FSMC_NADDRCONFIGS);
-  stm32_extmemgpios(g_dataconfig, STM32_FSMC_NDATACONFIGS);
-
-  /* Enable AHB clocking to the FSMC */
-
-  regval  = getreg32( STM32_RCC_AHB3ENR);
-  regval |= RCC_AHB3ENR_FSMCEN;
-  putreg32(regval, STM32_RCC_AHB3ENR);
+  /* Enable AHB clocking to the FMC */
+  stm32_fmc_enable();
 
   /* Configure and enable the SDRAM bank1
    *
@@ -191,41 +141,31 @@
    *   90MHz = 11,11 ns
    *   All timings from the datasheet for Speedgrade -7 (=7ns)
    */
-
-  putreg32(FSMC_SDRAM_CR_RPIPE_1 |
-           FSMC_SDRAM_CR_SDCLK_2X |
-           FSMC_SDRAM_CR_CASLAT_3 |
-           FSMC_SDRAM_CR_BANKS_4 |
-           FSMC_SDRAM_CR_WIDTH_16 |
-           FSMC_SDRAM_CR_ROWBITS_12 |
-           FSMC_SDRAM_CR_COLBITS_8,
-      STM32_FSMC_SDCR1);
-
-  putreg32(FSMC_SDRAM_CR_RPIPE_1 |
-           FSMC_SDRAM_CR_SDCLK_2X |
-           FSMC_SDRAM_CR_CASLAT_3 |
-           FSMC_SDRAM_CR_BANKS_4 |
-           FSMC_SDRAM_CR_WIDTH_16 |
-           FSMC_SDRAM_CR_ROWBITS_12 |
-           FSMC_SDRAM_CR_COLBITS_8,
-      STM32_FSMC_SDCR2);
-
-  putreg32((2 << FSMC_SDRAM_TR_TRCD_SHIFT) |  /* tRCD min = 15ns */
-           (2 << FSMC_SDRAM_TR_TRP_SHIFT) |   /* tRP  min = 15ns */
-           (2 << FSMC_SDRAM_TR_TWR_SHIFT) |   /* tWR      = 2CLK */
-           (7 << FSMC_SDRAM_TR_TRC_SHIFT) |   /* tRC  min = 63ns */
-           (4 << FSMC_SDRAM_TR_TRAS_SHIFT) |  /* tRAS min = 42ns */
-           (7 << FSMC_SDRAM_TR_TXSR_SHIFT) |  /* tXSR min = 70ns */
-           (2 << FSMC_SDRAM_TR_TMRD_SHIFT),   /* tMRD     = 2CLK */
-      STM32_FSMC_SDTR2);
+  val = FMC_SDCR_RPIPE_1 |      /* rpipe = 1 hclk */
+    FMC_SDCR_SDCLK_2X |         /* sdclk = 2 hclk */
+    FMC_SDCR_CAS_LATENCY_3 |    /* cas latency = 3 cycles */
+    FMC_SDCR_NBANKS_4 |         /* 4 internal banks */
+    FMC_SDCR_WIDTH_16 |         /* width = 16 bits */
+    FMC_SDCR_ROWS_12 |          /* numrows = 12 */
+    FMC_SDCR_COLS_8;            /* numcols = 8 bits */
+  stm32_fmc_sdram_set_control(1, val);
+  stm32_fmc_sdram_set_control(2, val);
+
+  val = FMC_SDTR_TRCD(3) |      /* tRCD min = 15ns */
+    FMC_SDTR_TRP(3) |           /* tRP  min = 15ns */
+    FMC_SDTR_TWR(3) |           /* tWR      = 2CLK */
+    FMC_SDTR_TRC(8) |           /* tRC  min = 63ns */
+    FMC_SDTR_TRAS(5) |          /* tRAS min = 42ns */
+    FMC_SDTR_TXSR(8) |          /* tXSR min = 70ns */
+    FMC_SDTR_TMRD(3);           /* tMRD     = 2CLK */
+  stm32_fmc_sdram_set_timing(2, val);
 
   /* SDRAM Initialization sequence */
-
-  stm32_sdramcommand(STM32_SDRAM_CLKEN);      /* Clock enable command */
-  for (count = 0; count < 10000; count++) ;    /* Delay */
-  stm32_sdramcommand(STM32_SDRAM_PALL);       /* Precharge ALL command */
-  stm32_sdramcommand(STM32_SDRAM_REFRESH);    /* Auto refresh command */
-  stm32_sdramcommand(STM32_SDRAM_MODEREG);    /* Mode Register program */
+  stm32_fmc_sdram_command(STM32_SDRAM_CLKEN);   /* Clock enable command */
+  for (count = 0; count < 10000; count++);      /* Delay */
+  stm32_fmc_sdram_command(STM32_SDRAM_PALL);    /* Precharge ALL command */
+  stm32_fmc_sdram_command(STM32_SDRAM_REFRESH); /* Auto refresh command */
+  stm32_fmc_sdram_command(STM32_SDRAM_MODEREG); /* Mode Register program */
 
   /* Set refresh count
    *
@@ -233,30 +173,8 @@
    * Refresh_Rate = 7.81us
    * Counter = (FMC_CLK * Refresh_Rate) - 20
    */
-
-  putreg32(683 << 1, STM32_FSMC_SDRTR);
+  stm32_fmc_sdram_set_refresh_rate(683);
 
   /* Disable write protection */
-
-//  regval = getreg32(STM32_FSMC_SDCR2);
-//  putreg32(regval & 0xFFFFFDFF, STM32_FSMC_SDCR2);
-}
-
-/************************************************************************************
- * Name: stm32_disablefsmc
- *
- * Description:
- *  enable clocking to the FSMC module
- *
- ************************************************************************************/
-
-void stm32_disablefsmc(void)
-{
-  uint32_t regval;
-
-  /* Disable AHB clocking to the FSMC */
-
-  regval  = getreg32(STM32_RCC_AHB3ENR);
-  regval &= ~RCC_AHB3ENR_FSMCEN;
-  putreg32(regval, STM32_RCC_AHB3ENR);
+  // stm32_fmc_sdram_write_protect(2, false);
 }
--- ./nuttx/configs/stm32f429i-disco/README.txt	2019-05-22 21:57:21.879934906 -0700
+++ ./nuttx/configs/stm32f429i-disco/README.txt	2019-05-22 22:01:33.864379824 -0700
@@ -41,7 +41,7 @@
   - Ser
   - Timer Inputs/Outputs
   - FPU
-  - FSMC SRAM
+  - FMC SDRAM
   - STM32F429I-DISCO-specific Configuration Options
   - Configurations
 
@@ -323,7 +323,7 @@
 On-board SDRAM
 --------------
 The STM32F429I-DISCO has 8 MBytes on-board SDRAM connected to the MCU's
-SDRAM Bank 2 connections (Bank 6 of the FSMC).  This means the 8 MBytes
+SDRAM Bank 2 connections (Bank 6 of the FMC).  This means the 8 MiB
 (when enabled) is mapped to address 0xD0000000-0xD07FFFFF.  The port for
 the STM32F429I-DISCO board includes support for using the onboard 8M SDRAM.
 
@@ -336,20 +336,20 @@
 
   CONFIG_STM32_CCMEXCLUDE    : Exclude CCM SRAM from the HEAP
 
-In addition to internal SRAM, SRAM may also be available through the FSMC.
-In order to use FSMC SRAM, the following additional things need to be
+In addition to internal SRAM, SRAM may also be available through the FMC.
+In order to use FMC SDRAM, the following additional things need to be
 present in the NuttX configuration file:
 
-  CONFIG_STM32_FSMC=y        : Enables the FSMC and the 8MByte SDRAM
-  CONFIG_STM32_FSMC_SRAM=y   : Indicates that SRAM is available via the
-                               FSMC (as opposed to an LCD or FLASH).
-  CONFIG_HEAP2_BASE          : The base address of the SRAM in the FSMC
-                               address space.  This should be 0xD0000000.
-  CONFIG_HEAP2_SIZE          : The size of the SRAM in the FSMC
-                               address space.  This should be 8388608.
-  CONFIG_MM_REGIONS          : Must be set to a large enough value to
-                               include the FSMC SDRAM (1, 2 or 3 depending
-                               if the CCM RAM and/or FSCM SDRAM are enabled).
+  CONFIG_STM32_FMC=y          : Enables the FMC and the 8MiB SDRAM
+  CONFIG_STM32_EXTERNAL_RAM=y : Indicates that RAM is available via the
+                                FMC (as opposed to an LCD or FLASH).
+  CONFIG_HEAP2_BASE           : The base address of the RAM in the FMC
+                                address space.  This should be 0xD0000000.
+  CONFIG_HEAP2_SIZE           : The size of the RAM in the FMC
+                                address space.  This should be 8388608.
+  CONFIG_MM_REGIONS           : Must be set to a large enough value to
+                                include the FMC SDRAM (1, 2 or 3 depending
+                                if the CCM RAM and/or FMC SDRAM are enabled).
 
 SRAM Configurations
 --------------------
@@ -357,19 +357,19 @@
 
   Configuration 1. System SRAM (only)
                    CONFIG_MM_REGIONS == 1
-                   CONFIG_STM32_FSMC_SRAM NOT defined
+                   CONFIG_STM32_EXTERNAL_RAM NOT defined
                    CONFIG_STM32_CCMEXCLUDE defined
   Configuration 2. System SRAM and CCM SRAM
                    CONFIG_MM_REGIONS == 2
-                   CONFIG_STM32_FSMC_SRAM NOT defined
+                   CONFIG_STM32_EXTERNAL_RAM NOT defined
                    CONFIG_STM32_CCMEXCLUDE NOT defined
-  Configuration 3. System SRAM and FSMC SRAM
+  Configuration 3. System SRAM and FMC SDRAM
                    CONFIG_MM_REGIONS == 2
-                   CONFIG_STM32_FSMC_SRAM defined
+                   CONFIG_STM32_EXTERNAL_RAM defined
                    CONFIG_STM32_CCMEXCLUDE defined
-  Configuration 4. System SRAM, CCM SRAM, and FSMC SRAM
+  Configuration 4. System SRAM, CCM SRAM, and FMC SDRAM
                    CONFIG_MM_REGIONS == 3
-                   CONFIG_STM32_FSMC_SRAM defined
+                   CONFIG_STM32_EXTERNAL_RAM defined
                    CONFIG_STM32_CCMEXCLUDE NOT defined
 
 STM32F429I-DISCO-specific Configuration Options
@@ -427,16 +427,16 @@
 
     CONFIG_STM32_CCMEXCLUDE - Exclude CCM SRAM from the HEAP
 
-    In addition to internal SRAM, SRAM may also be available through the FSMC.
-    In order to use FSMC SRAM, the following additional things need to be
+    In addition to internal SRAM, SDRAM may also be available through the FMC.
+    In order to use FMC SDRAM, the following additional things need to be
     present in the NuttX configuration file:
 
-    CONFIG_STM32_FSMC_SRAM - Indicates that SRAM is available via the
-      FSMC (as opposed to an LCD or FLASH).
+    CONFIG_STM32_EXTERNAL_RAM - Indicates that SDRAM is available via the
+      FMC (as opposed to an LCD or FLASH).
 
-    CONFIG_HEAP2_BASE - The base address of the SRAM in the FSMC address space (hex)
+    CONFIG_HEAP2_BASE - The base address of the SDRAM in the FMC address space (hex)
 
-    CONFIG_HEAP2_SIZE - The size of the SRAM in the FSMC address space (decimal)
+    CONFIG_HEAP2_SIZE - The size of the SDRAM in the FMC address space (decimal)
 
     CONFIG_ARCH_FPU - The STM32F429I-DISCO supports a floating point unit (FPU)
 
@@ -476,7 +476,7 @@
 
     AHB3
     ----
-    CONFIG_STM32_FSMC
+    CONFIG_STM32_FMC
 
     APB1
     ----
--- ./nuttx/configs/stm32f429i-disco/nxhello/defconfig	2019-05-22 22:06:25.044315903 -0700
+++ ./nuttx/configs/stm32f429i-disco/nxhello/defconfig	2019-05-22 22:06:54.451907258 -0700
@@ -68,8 +68,8 @@
 CONFIG_STM32_DMA2D_FB_SIZE=307200
 CONFIG_STM32_DMA2D_LAYER_PPLINE=240
 CONFIG_STM32_DMA2D_NLAYERS=2
-CONFIG_STM32_FSMC=y
-CONFIG_STM32_FSMC_SRAM=y
+CONFIG_STM32_FMC=y
+CONFIG_STM32_EXTERNAL_RAM=y
 CONFIG_STM32_JTAG_SW_ENABLE=y
 CONFIG_STM32_LTDC=y
 CONFIG_STM32_LTDC_FB_BASE=0xD076A000
